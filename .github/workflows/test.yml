name: Test
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest , macos-latest, windows-latest ]
        go-version: [ '1.18', '1.19' ]
    steps:
      - name: Configure Windows
        if: matrix.os == 'windows-latest'
        run: git config --global core.autocrlf false # fixes go lint fmt error
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - name: Lint
        uses: golangci/golangci-lint-action@v3
      - name: Test Windows 1.18 # can't run race detector on windows with go 1.18 or lower due to a bug (https://github.com/golang/go/issues/46099)
        if: matrix.os == 'windows-latest' && matrix.go-version == '1.18'
        uses: n8maninger/action-golang-test@v1
      - name: Test
        if: matrix.os != 'windows-latest' || matrix.go-version != '1.18'
        uses: n8maninger/action-golang-test@v1
        with:
          args: "-race"
      - name: Test Integration Windows 1.18 # can't run race detector on windows with go 1.18 or lower due to a bug (https://github.com/golang/go/issues/46099)
        if: matrix.os == 'windows-latest' && matrix.go-version == '1.18'
        uses: n8maninger/action-golang-test@v1
        with:
          package: "./internal/testing/..."
          args: "-race;-tags='debug testing netgo';-timeout 300s"
      - name: Test Integration
        if: matrix.os != 'windows-latest' || matrix.go-version != '1.18'
        uses: n8maninger/action-golang-test@v1
        with:
          package: "./internal/testing/..."
          args: "-race;-tags='debug testing netgo';-timeout 300s"
      - name: Check Endpoints
        shell: bash
        run: |
          go install go.sia.tech/jape/japecheck@latest
          $(go env GOPATH)/bin/japecheck ./bus
          $(go env GOPATH)/bin/japecheck ./worker
      - name: Build
        run: go build -o bin/ ./cmd/renterd
